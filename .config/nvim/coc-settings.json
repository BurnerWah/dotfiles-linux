{
  "languageserver": {
    "ccls": {
      "command": "ccls",
      "filetypes": ["c", "cpp", "cuda", "objc", "objcpp"],
      "rootPatterns": [".ccls", ".ccls-root", "compile_commands.json", ".git/"],
      "initializationOptions": {
        "cache": { "directory": ".ccls-cache" },
        "clang": { "resourceDir": "/usr/lib64/clang/11" },
        "highlight": { "lsRanges": true }
      }
    },
    "cmake": {
      "command": "cmake-language-server",
      "filetypes": ["cmake"],
      "rootPatterns": ["build/"],
      "initializationOptions": { "buildDirectory": "build" }
    },
    "dotls": {
      "module": "~/.local/lib/node_modules/dot-language-server/bin/server.js",
      "args": ["--node-ipc"],
      "filetypes": ["dot"]
    },
    "efm": {
      "command": "efm-langserver",
      "filetypes": ["eruby", "make", "zsh"]
    },
    "fortls": {
      "command": "fortls",
      "filetypes": ["fortran"],
      "rootPatterns": [".fortls", ".git/"]
    },
    "gopls": {
      "command": "gopls",
      "filetypes": ["go"],
      "rootPatterns": ["go.mod", "Gopkg.toml"],
      "disableWorkspaceFolders": true,
      "initializationOptions": { "usePlaceholders": true }
    },
    "jedils": {
      "command": "jedi-language-server",
      "filetypes": ["python"]
    },
    "pyls": {
      "command": "pyls",
      "filetypes": ["python"],
      "settings": {
        "pyls": {
          "configurationSources": ["pyflakes", "pycodestyle"],
          "plugins": {
            "jedi_completion": { "enabled": true },
            "jedi_hover": { "enabled": true },
            "jedi_references": { "enabled": true },
            "jedi_signature_help": { "enabled": true },
            "jedi_symbols": { "enabled": true, "all_scopes": true },
            "mccabe": { "enabled": true, "threshold": 15 },
            "preload": { "enabled": true },
            "pycodestyle": { "enabled": true },
            "pydocstyle": { "enabled": false },
            "pyflakes": { "enabled": false },
            "rope_completion": { "enabled": true },
            "yapf": { "enabled": true }
          }
        }
      }
    },
    "sqlls": {
      "module": "~/.local/lib/node_modules/sql-language-server/npm_bin/cli.js",
      "args": ["up"],
      "filetypes": ["sql"]
    },
    "sumneko_lua": { "command": "lua-language-server", "filetypes": ["lua"] },
    "lua": { "command": "lua-lsp", "filetypes": ["lua-DISABLED"] }
  },
  "coc.preferences.extensionUpdateCheck": "never",
  "coc.preferences.formatOnSaveFiletypes": [
    "cmake",
    "css",
    "html",
    "javascript",
    "json",
    "less",
    "scss",
    "sh",
    "typescript",
    "yaml"
  ],
  "coc.preferences.hoverTarget": "float",
  "codeLens.enable": true,
  "diagnostic.filetypeMap": { "markdown": "vimwiki" },
  "diagnostic-languageserver.linters": {
    "alex": {
      "sourceName": "alex",
      "command": "alex",
      "args": ["--", "%file"],
      "isStdout": false,
      "isStderr": true,
      "formatPattern": [
        "^ *(\\d+):(\\d+)-(\\d+):(\\d+) +warning +(.+?)  +(.+?)  +(.+)$",
        { "line": 1, "column": 2, "endLine": 3, "endColumn": 4, "message": 5 }
      ],
      "securities": { "undefined": "warning" }
    },
    "alex_text": {
      "sourceName": "alex",
      "command": "alex",
      "args": ["--text", "--", "%file"],
      "isStdout": false,
      "isStderr": true,
      "formatPattern": [
        "^ *(\\d+):(\\d+)-(\\d+):(\\d+) +warning +(.+?)  +(.+?)  +(.+)$",
        { "line": 1, "column": 2, "endLine": 3, "endColumn": 4, "message": 5 }
      ],
      "securities": { "undefined": "warning" }
    },
    "alex_html": {
      "sourceName": "alex",
      "command": "alex",
      "args": ["--html", "--", "%file"],
      "isStdout": false,
      "isStderr": true,
      "formatPattern": [
        "^ *(\\d+):(\\d+)-(\\d+):(\\d+) +warning +(.+?)  +(.+?)  +(.+)$",
        { "line": 1, "column": 2, "endLine": 3, "endColumn": 4, "message": 5 }
      ],
      "securities": { "undefined": "warning" }
    },
    "cmakelint": {
      "sourceName": "cmakelint",
      "command": "cmakelint",
      "args": ["%file"],
      "offsetColumn": -1,
      "formatPattern": ["^.+?:(\\d+): (.*)$", { "line": 1, "message": [2] }],
      "securities": { "undefined": "warning" }
    },
    "fish": {
      "sourceName": "fish",
      "command": "fish",
      "args": ["-n", "%file"],
      "isStdout": false,
      "isStderr": true,
      "offsetColumn": -1,
      "formatPattern": [
        "^.*\\(line (\\d+)\\): (.*)$",
        { "line": 1, "message": 2 }
      ]
    },
    "gitlint": {
      "sourceName": "gitlint",
      "command": "gitlint",
      "args": ["--msg-filename", "%tempfile"],
      "isStdout": false,
      "isStderr": true,
      "offsetColumn": -1,
      "formatPattern": ["^(\\d+): (.*)$", { "line": 1, "message": 2 }],
      "securities": { "undefined": "warning" }
    },
    "jshint": {
      "sourceName": "jshint",
      "command": "jshint",
      "args": [
        "--reporter",
        "unix",
        "--extract",
        "auto",
        "--filename",
        "%filepath",
        "-"
      ],
      "formatPattern": [
        "^[^:]+:(\\d+):(\\d+): (.+)$",
        { "line": 1, "column": 2, "message": [3] }
      ],
      "securities": { "undefined": "hint" }
    },
    "jsonlint": {
      "sourceName": "jsonlint",
      "command": "jsonlint",
      "args": ["--compact", "-"],
      "isStdout": false,
      "isStderr": true,
      "formatPattern": [
        "^line (\\d+), col (\\d+), (.*)$",
        { "line": 1, "column": 2, "message": [3] }
      ]
    },
    "luacheck": {
      "sourceName": "luacheck",
      "command": "luacheck",
      "args": ["--formatter", "plain", "--codes", "--ranges", "-", "-g", "-u"],
      "formatPattern": [
        "^.+?:(\\d+):(\\d+)-(\\d+): (\\(([WE])\\d+\\) .*)$",
        {
          "line": 1,
          "column": 2,
          "endColumn": 3,
          "security": 5,
          "message": [4]
        }
      ],
      "securities": { "W": "warning", "error": "E" }
    },
    "mypy": {
      "sourceName": "mypy",
      "command": "mypy",
      "args": [
        "--no-color-output",
        "--no-error-summary",
        "--show-column-numbers",
        "--follow-imports=silent",
        "--ignore-missing-imports",
        "%file"
      ],
      "formatPattern": [
        "^.*:(\\d+?):(\\d+?): ([a-z]+?): (.*)$",
        { "line": 1, "column": 2, "security": 3, "message": 4 }
      ],
      "securities": { "error": "error", "note": "hint" }
    },
    "pylint": {
      "sourceName": "pylint",
      "command": "pylint",
      "args": ["--output-format", "json", "--score", "no", "%file"],
      "parseJson": {
        "line": "line",
        "column": "column",
        "security": "type",
        "message": "${message} (${message-id}:${symbol})"
      },
      "rootPatterns": [".git", "pyproject.toml", "setup.py"],
      "securities": {
        "informational": "hint",
        "refactor": "info",
        "convention": "info",
        "warning": "warning",
        "error": "error",
        "fatal": "error"
      },
      "offsetColumn": 1
    },
    "rstcheck": {
      "sourceName": "rstcheck",
      "command": "rstcheck",
      "args": ["-"],
      "isStdout": false,
      "isStderr": true,
      "offsetColumn": -1,
      "formatPattern": [
        "^[^:]+:(\\d+): \\(.+?/(\\d)\\) (.*)$",
        { "line": 1, "security": 2, "message": [3] }
      ],
      "securities": { "1": "info", "2": "warning", "3": "error", "4": "error" }
    },
    "rst-lint": {
      "sourceName": "rst-lint",
      "command": "rst-lint",
      "args": ["--format", "json", "%file"],
      "offsetColumn": -1,
      "parseJson": {
        "line": "line",
        "security": "level",
        "message": "${message}"
      },
      "securities": { "1": "info", "2": "warning", "3": "error", "4": "error" }
    },
    "tlcheck": {
      "sourceName": "tlcheck",
      "command": "tl",
      "args": ["check", "%file"],
      "isStderr": true,
      "formatPattern": [
        "^[^:]+:(\\d+):(\\d+): (.*)$",
        { "line": 1, "column": 2, "message": 3 }
      ]
    },
    "vint": {
      "sourceName": "vint",
      "command": "vint",
      "args": ["--enable-neovim", "--json", "--style-problem", "-"],
      "debounce": 100,
      "parseJson": {
        "line": "line_number",
        "column": "column_number",
        "security": "severity",
        "message": "${description} [${policy_name}]"
      },
      "securities": {
        "warning": "warning",
        "error": "error",
        "style_problem": "hint"
      }
    },
    "write-good": {
      "command": "write-good",
      "debounce": 100,
      "args": ["%tempfile"],
      "offsetColumn": 1,
      "sourceName": "write-good",
      "formatPattern": [
        "(.*)\\s+on\\s+line\\s+(\\d+)\\s+at\\s+column\\s+(\\d+)\\s*$",
        { "line": 2, "column": 3, "message": 1 }
      ],
      "securities": { "undefined": "hint" }
    },
    "xmllint": {
      "sourceName": "xmllint",
      "command": "xmllint",
      "args": ["--noout", "-"],
      "isStdout": false,
      "isStderr": true,
      "offsetColumn": -1,
      "formatPattern": [
        "^[^:]+:(\\d+):\\s*(([^:]+)\\s*:.*)$",
        { "line": 1, "security": 3, "message": [2] }
      ],
      "securities": { "warning": "warning" }
    },
    "xo": {
      "sourceName": "xo",
      "command": "xo",
      "rootPatterns": ["package.json", ".git"],
      "debounce": 100,
      "args": [
        "--reporter",
        "json",
        "--stdin",
        "--stdin-filename",
        "%filepath"
      ],
      "parseJson": {
        "errorsRoot": "[0].messages",
        "line": "line",
        "column": "column",
        "endLine": "endLine",
        "endColumn": "endColumn",
        "message": "[xo] ${message} [${ruleId}]",
        "security": "severity"
      },
      "securities": { "2": "error", "1": "warning" }
    },
    "zsh": {
      "sourceName": "zsh",
      "command": "linter_run_zsh.sh",
      "args": ["%tempfile"],
      "offsetColumn": -1,
      "formatPattern": ["^[^:]+:(\\d+): (.*)$", { "line": 1, "message": [2] }]
    }
  },
  "diagnostic-languageserver.filetypes": {
    "asciidoc": ["alex_text", "languagetool", "write-good"],
    "bats": "shellcheck",
    "cmake": "cmakelint",
    "css": "stylelint",
    "dockerfile": "hadolint",
    "Dockerfile": "hadolint",
    "elixir": "mix_credo",
    "fish": "fish",
    "gitcommit": "gitlint",
    "graphql": "eslint",
    "html": ["alex_html", "tidy", "write-good"],
    "javascript": ["eslint", "jshint", "standard", "xo"],
    "json": ["jsonlint"],
    "less": "stylelint",
    "lua": "luacheck",
    "mail": ["alex_text", "languagetool"],
    "markdown": ["alex", "languagetool", "write-good"],
    "nroff": ["alex_text", "write-good"],
    "python": ["mypy", "pylint"],
    "php": ["phpcs", "phpstan"],
    "po": ["alex", "write-good"],
    "pod": ["alex", "write-good"],
    "rst": ["alex_text", "rstcheck", "rst-lint", "write-good"],
    "sass": "stylelint",
    "scss": "stylelint",
    "sh": "shellcheck",
    "stylus": "stylelint",
    "sugarss": "stylelint",
    "teal": "tlcheck",
    "tex": ["alex_text", "write-good"],
    "texinfo": ["alex_text", "write-good"],
    "typescript": ["eslint", "standard", "xo"],
    "vimwiki": ["alex_text", "languagetool", "write-good"],
    "vue": ["eslint"],
    "xhtml": ["alex_text", "write-good"],
    "xml": "xmllint",
    "yaml": "yamllint",
    "zsh": "zsh"
  },
  "diagnostic-languageserver.formatters": {
    "shfmt": { "command": "shfmt", "args": ["-i=2", "-ci"] },
    "cmakeformalt": { "command": "cmake-format" },
    "isort": { "command": "isort", "args": ["-q", "-"] }
  },
  "diagnostic-languageserver.formatFiletypes": {
    "cmake": "cmakeformat",
    "dart": "dartfmt",
    "elixir": "mix_format",
    "lua": "lua-format",
    "sh": "shfmt"
  },
  "highlight.colors.enable": false,
  "highlight.disableLanguages": ["markdown"],
  "highlight.colorNames.enable": false,
  "json.schemas": [
    {
      "fileMatch": ["*.ipynb"],
      "url": "https://github.com/jupyter/nbformat/raw/master/nbformat/v4/nbformat.v4.schema.json"
    }
  ],
  "prettier.semi": false,
  "prettier.singleQuote": true,
  "python.formatting.provider": "yapf",
  "rust.clippy_preference": "on",
  "rust-client.disableRustup": true,
  "session.directory": "~/.local/share/nvim/sessions",
  "signature.target": "float",
  "suggest.labelMaxLength": 100,
  "tabnine.disable_filetypes": ["rst", "markdown", "vimwiki"],
  "vimlsp.suggest.fromRuntimepath": true,
  "xml.catalogs": [
    "/etc/xml/catalog",
    "/home/jadenpleasants/.config/xml/catalog.xml"
  ],
  "xml.codeLens.enabled": true,
  "xml.fileAssociations": [
    {
      "pattern": "**/*.aiml",
      "systemId": "https://github.com/dotcypress/aiml/raw/master/AIML.xsd"
    },
    { "pattern": "**/*.doap", "systemId": "http://usefulinc.com/ns/doap" },
    {
      "pattern": "**/*.smil",
      "systemId": "https://www.w3.org/2008/SMIL30/SMIL30Language.dtd"
    },
    {
      "pattern": "**/*.svg",
      "systemId": "https://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"
    }
  ],
  "xml.java.home": "/usr/lib/jvm/jre",
  "xml.server.workDir": "~/.cache/lsp4xml",
  "yaml.format.enable": true,
  "yaml.format.singleQuote": true,
  "yaml.schemas": {
    "https://github.com/mattn/efm-langserver/raw/master/schema.json": "/efm-langserver/config.yaml"
  }
}
