---
version: 2
root-markers:
  - .git/

tools:
  eruby-erb: &eruby-erb
    lint-command: 'erb -x -T - | ruby -c'
    lint-stdin: true
    lint-offset: 1
    format-command: 'htmlbeautifier'

  # Handle with diagnostic-ls after #40 is fixed
  git-gitlint: &git-gitlint
    lint-command: 'gitlint'
    lint-stdin: true
    lint-ignore-exit-code: true
    lint-formats:
      - '%l: %m'

  lua-lua-format: &lua-lua-format
    format-command: 'lua-format -i'
    format-stdin: true

  # Try to move to diagnostic-ls after #40 is fixed
  make-checkmake: &make-checkmake
    lint-command: 'checkmake --format="{{.LineNumber}}:{{.Rule}}: {{.Violation}}"'
    lint-stdin: false
    lint-ignore-exit-code: true
    lint-formats:
      - '%l:%m'

  markdown-markdownlint: &markdown-markdownlint
    lint-command: 'markdownlint -s'
    lint-stdin: true
    lint-formats:
      - '%f: %l: %m'

  # This doesn't seem to work
  rst-rstcheck: &rst-rstcheck
    lint-command: 'rstcheck -'
    lint-stdin: true
    lint-formats:
      - '-:%l: (%tARNING/2) %m'
      - '-:%l: (%tERROR/3) %m'
      - '-:%l: (%tEVERE/4) %m'

  vim-vint: &vim-vint
    lint-command: 'vint --enable-neovim -'
    lint-stdin: true

  yaml-yamllint: &yaml-yamllint
    lint-command: 'yamllint -f parsable -'
    lint-stdin: true

  zsh-noexec: &zsh-noexec
    lint-command: 'zsh -n /dev/stdin'
    lint-stdin: true
    lint-ignore-exit-code: true
    lint-formats:
      - '/dev/stdin:%l: %m'

  # Custom script to attemt to provide hover functionality
  zsh-man: &zsh-man
    hover-command: 'efm_hover_zsh.sh'
    hover-stdin: true

languages:
  eruby:
    - <<: *eruby-erb

  gitcommit:
    - <<: *git-gitlint

  lua:
    - <<: *lua-lua-format

  make:
    - <<: *make-checkmake

  markdown:
    - <<: *markdown-markdownlint

  rst:
    - <<: *rst-rstcheck

  vim:
    - <<: *vim-vint

  yaml:
    - <<: *yaml-yamllint

  zsh:
    # - <<: *zsh-noexec
    - <<: *zsh-man
