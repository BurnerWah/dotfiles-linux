{
  "languageserver": {
    "bashls": {
      "command": "bash-language-server",
      "args": ["start"],
      "filetypes": ["sh"],
      "ignoredRootPaths": ["~"]
    },
    "ccls": {
      "command": "ccls",
      "filetypes": ["c", "cpp", "cuda", "objc", "objcpp"],
      "rootPatterns": [".ccls", ".ccls-root", "compile_commands.json", ".git/"],
      "initializationOptions": {
        "cache": { "directory": ".ccls-cache" },
        "clang": { "resourceDir": "/usr/lib64/clang/10.0.1" },
        "highlight": { "lsRanges": true }
      }
    },
    "cmake": {
      "command": "cmake-language-server",
      "filetypes": ["cmake"],
      "rootPatterns": ["build/"],
      "initializationOptions": { "buildDirectory": "build" }
    },
    "digestif": {
      "command": "digestif",
      "filetypes": ["tex", "plaintex", "context"]
    },
    "dockerls": {
      "command": "docker-langserver",
      "args": ["--stdio"],
      "filetypes": ["dockerfile"]
    },
    "dotls": {
      "command": "dot-language-server",
      "args": ["--stdio"],
      "filetypes": ["dot"]
    },
    "efm": {
      "command": "efm-langserver",
      "filetypes": ["eruby", "yaml"]
    },
    "fortls": {
      "command": "fortls",
      "filetypes": ["fortran"],
      "rootPatterns": [".fortls", ".git/"]
    },
    "gopls": {
      "command": "gopls",
      "filetypes": ["go"],
      "rootPatterns": ["go.mod", "Gopkg.toml"],
      "disableWorkspaceFolders": true,
      "initializationOptions": { "usePlaceholders": true }
    },
    "lua": { "command": "lua-lsp", "filetypes": ["lua"] }
  },
  "coc.preferences.extensionUpdateCheck": "never",
  "coc.preferences.formatOnSaveFiletypes": [
    "css",
    "html",
    "javascript",
    "json",
    "typescript",
    "yaml"
  ],
  "coc.preferences.hoverTarget": "float",
  "diagnostic-languageserver.filetypes": {
    "vim": "vint",
    "sh": "shellcheck"
  },
  "highlight.colors.enable": false, // We have another plugin set up to handle this
  "json.schemas": [
    /*
     * https://schemastore.azurewebsites.net is the backend for
     * http://schemastore.org
     * technically you're not supposed to use it, but it supports HTTPS so I'm
     * using it anyway.
     */
    {
      "fileMatch": ["bower.json", ".bower.json"],
      "url": "https://schemastore.azurewebsites.net/schemas/json/bower.json"
    },
    {
      "fileMatch": ["coffeelint.json"],
      "url": "https://schemastore.azurewebsites.net/schemas/json/coffeelint.json"
    },
    {
      "fileMatch": ["compile_commands.json"],
      "url": "https://schemastore.azurewebsites.net/schemas/json/compile-commands.json"
    },
    {
      "fileMatch": ["composer.json"],
      "url": "https://schemastore.azurewebsites.net/schemas/json/composer.json"
    },
    {
      "fileMatch": [".csslintrc"],
      "url": "https://schemastore.azurewebsites.net/schemas/json/csslintrc.json"
    },
    {
      "fileMatch": ["*.ipynb"],
      "url": "https://github.com/jupyter/nbformat/raw/master/nbformat/v4/nbformat.v4.schema.json"
    },
    {
      "fileMatch": ["package.json"],
      "url": "https://schemastore.azurewebsites.net/schemas/json/package.json"
    }
  ],
  "list.source.tags.command": "ptags", // ptags is faster than ctags but only works in git repos
  "npm.binPath": "yarnpkg",
  "prettier.semi": false,
  "prettier.singleQuote": true,
  "python.jediEnabled": false, // enable Microsoft Python LS
  "rust.clippy_preference": "on",
  "rust-client.disableRustup": true, // I don't use rustup
  "session.directory": "~/.local/share/nvim/sessions",
  "signature.target": "float",
  "snippets.ultisnips.directories": ["UltiSnips", "gosnippets/UltiSnips"], // vim-go support
  "suggest.labelMaxLength": 100,
  "vimlsp.suggest.fromRuntimepath": true, // vimlsp runs quickly enough for this to work fine I guess
  "xml.catalogs": ["/etc/xml/catalog"],
  "xml.java.home": "/usr/lib/jvm/jre", // Needs to point to a JRE
  "xml.server.workDir": "~/.cache/lsp4xml", // By default places random shit in home folder
  "yaml.format.enable": true,
  "yaml.format.singleQuote": true,
  "yaml.schemas": {
    "https://schemastore.azurewebsites.net/api/json/appveyor.json": "?(.)appveyor.yml",
    "https://schemastore.azurewebsites.net/api/json/circleciconfig.json": "/.circleci/config.yml",
    "https://schemastore.azurewebsites.net/api/json/cirrus.json": "/.cirrus.yml",
    "https://schemastore.azurewebsites.net/api/json/codecov.json": "?(.)codecov.yml",
    "https://schemastore.azurewebsites.net/api/json/eslintrc.json": ".eslintrc.yml",
    "https://schemastore.azurewebsites.net/api/json/gitlab-ci.json": "/.gitlab-ci.yml",
    "https://schemastore.azurewebsites.net/api/json/github-action.json": "/action.yml",
    "https://schemastore.azurewebsites.net/api/json/github-workflow.json": "/.github/workflows/**.yml",
    "https://schemastore.azurewebsites.net/api/json/travis.json": "/.travis.yml",
    "https://github.com/snapcore/snapcraft/raw/master/schema/snapcraft.json": "?(.)snapcraft.yaml"
  }
  // vim:ft=jsonc
}
